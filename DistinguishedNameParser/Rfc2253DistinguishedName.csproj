<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard1.3</TargetFramework>
    <AssemblyName>SkiDiveCode.Ldap.Rfc2253</AssemblyName>
    <RootNamespace>SkiDiveCode.Ldap.Rfc2253</RootNamespace>
    <Authors>Eric S. Li</Authors>
    <Company></Company>
    <Product>RFC 2253 Distinguished Name Parser and Normalizer</Product>
    <Description>Accepts and parses strings in the format of an RFC 2253 Distinguished Name, and optionally normalizes them for direct comparison of equivalency.

This project is a .NET Standard 1.3 solution to parse LDAP (or X.509) Distinguished Names and optionally normalize them so that two (or more) Distinguished Names can be compared to one another for equivalency.

Closely follows [RFC 2253](https://www.ietf.org/rfc/rfc2253.txt) for parsing.  Parses both LDAPv2 and LDAPv3, but normalizes output for LDAPv3.

Instructions for Use
1. Supply a Distinguished Name to be parsed to the `DistinguishedName.Create(string distinguishedName)` method
2. Call the `Normalized()` method on the returned object to normalize the internal structures to be strictly compliant to RFC 2253
3. Do the same two calls for another Distinguished Name
4. To compare the two Distinguished Names for equivalency, compare the `DistinguishedName` objects' `ToString()` results to one another</Description>
    <Copyright>2018, 2021 Eric S. Li</Copyright>
    <PackageReleaseNotes>Released under the MIT License.

This project was originally released targeting .NET Core 2.0.
RFC 2253 Distinguished Name Parser Version 1.1.0 now targets .NET Standard 1.3 to make it compatible with a larger number of projects.  Refer to https://docs.microsoft.com/en-us/dotnet/standard/net-standard for more details.

Version 1.1.0 fixes a bug in the `ToString()` method (commas were missing), which may be a breaking change for some implementors.

Version 1.1.0 also fixes another bug in the `ToString()` method with regards to multi-valued attibutes, and now also sorts multi-valued attributes so that two distinguished names will now match if they have the same, but dis-ordered multi-valued attributes.</PackageReleaseNotes>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <FileVersion>1.1.1.0</FileVersion>
    <Version>1.1.1</Version>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageId>Rfc2253</PackageId>
    <RepositoryUrl>https://github.com/Ski-Dive-Dev/RFC2253</RepositoryUrl>
    <PackageTags>RFC 2253 Distinguished DistinguishedName DN X.509 Parser Normalizer</PackageTags>
  </PropertyGroup>

</Project>
